import numpy as np
import matplotlib.pyplot as plt

# Определение функций V_i(q1)
q1 = np.linspace(0, 1, 500)
V1 = 8 - 5 * q1
V2 = 6 + q1
V3 = 5 - q1
V4 = 2 + 7 * q1
V5 = 1 + 5 * q1

# Построение графиков
plt.figure(figsize=(10, 6))
plt.plot(q1, V1, label=r'$V_1 = 8 - 5q_1$', color='blue')
plt.plot(q1, V2, label=r'$V_2 = 6 + q_1$', color='orange')
plt.plot(q1, V3, label=r'$V_3 = 5 - q_1$', color='green')
plt.plot(q1, V4, label=r'$V_4 = 2 + 7q_1$', color='red')
plt.plot(q1, V5, label=r'$V_5 = 1 + 5q_1$', color='purple')

# Определение верхней огибающей
upper_envelope = np.minimum.reduce([V1, V2, V3, V4, V5])
plt.plot(q1, upper_envelope, label='Верхняя огибающая (V)', color='black', linestyle='--', linewidth=2)

# Настройка графика
plt.title('Графическое решение матричной игры', fontsize=14)
plt.xlabel(r'$q_1$', fontsize=12)
plt.ylabel('V', fontsize=12)
plt.legend(fontsize=10)
plt.grid(alpha=0.4)
plt.xlim(0, 1)
plt.ylim(0, 10)
plt.show()